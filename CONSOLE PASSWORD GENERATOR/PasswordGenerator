import random
import string

# Function to generate a single password based on the length and complexity level
def generate_password(length, complexity):
    if complexity == 1:
        chars = string.ascii_letters  # Letters only
    elif complexity == 2:
        chars = string.ascii_letters + string.digits  # Letters and digits
    elif complexity == 3:
        chars = string.ascii_letters + string.digits + string.punctuation  # Letters, digits, and special characters
    else:
        return "Invalid complexity level."

    password = ''.join(random.choice(chars) for _ in range(length))

    # Ensure the password meets complexity requirements if complexity is 2 or 3
    if complexity == 2 and not any(char.isdigit() for char in password):
        return generate_password(length, complexity)
    if complexity == 3 and (not any(char.isdigit() for char in password) or not any(char in string.punctuation for char in password)):
        return generate_password(length, complexity)

    return password

# Function to write generated passwords to a file
def save_passwords_to_file(passwords):
    try:
        with open("generated_passwords.txt", "w") as file:
            for password in passwords:
                file.write(password + '\n')
        print("Passwords saved to 'generated_passwords.txt'")
    except Exception as e:
        print(f"Error saving passwords to file: {e}")

# Main function to interact with the user and generate passwords
def main():
    print("Welcome to the Password Generator!")
    
    # Get the desired password length from the user
    while True:
        try:
            length = int(input("Enter password length (recommended: 8-16 characters): "))
            if length < 4:
                print("Password length must be at least 4 characters.")
                continue
            break
        except ValueError:
            print("Please enter a valid number.")

    # Let the user choose the complexity level
    print("\nChoose the complexity level:")
    print("1. Simple (letters only)")
    print("2. Medium (letters and digits)")
    print("3. Complex (letters, digits, and special characters)")
    
    while True:
        try:
            complexity = int(input("Enter the complexity level (1, 2, or 3): "))
            if complexity not in [1, 2, 3]:
                print("Please choose 1, 2, or 3.")
                continue
            break
        except ValueError:
            print("Please enter a valid number.")
    
    # Get the number of passwords to generate
    while True:
        try:
            num_passwords = int(input("How many passwords would you like to generate? "))
            if num_passwords < 1:
                print("You must generate at least one password.")
                continue
            break
        except ValueError:
            print("Please enter a valid number.")
    
    # Generate the requested number of passwords
    passwords = []
    for _ in range(num_passwords):
        passwords.append(generate_password(length, complexity))
    
    # Display the generated passwords
    print("\nGenerated passwords:")
    for password in passwords:
        print(password)
    
    # Ask if the user wants to save the passwords to a file
    save_to_file = input("\nWould you like to save the passwords to a file? (yes/no): ").lower()
    if save_to_file in ['yes', 'y']:
        save_passwords_to_file(passwords)
    else:
        print("Passwords were not saved to a file.")

if __name__ == "__main__":
    main()
